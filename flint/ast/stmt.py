# Auto generated by: tools/generate_ast.py
# Do not modify this file manually.

class Stmt:
    def accept(self, visitor):
        raise NotImplementedError()

class StmtVisitor:
    def visit_block(self, block):
        raise NotImplementedError()

    def visit_expression(self, expression):
        raise NotImplementedError()

    def visit_print(self, print):
        raise NotImplementedError()

    def visit_var(self, var):
        raise NotImplementedError()

class Block(Stmt):
    def __init__(self, statements):
        self.statements = statements

    def accept(self, visitor):
        return visitor.visit_block(self)

class Expression(Stmt):
    def __init__(self, expression):
        self.expression = expression

    def accept(self, visitor):
        return visitor.visit_expression(self)

class Print(Stmt):
    def __init__(self, expression):
        self.expression = expression

    def accept(self, visitor):
        return visitor.visit_print(self)

class Var(Stmt):
    def __init__(self, name, initializer):
        self.name = name
        self.initializer = initializer

    def accept(self, visitor):
        return visitor.visit_var(self)

