Search.setIndex({"alltitles": {"Code Examples": [[0, null], [0, "id3"]], "Contents": [[3, "contents"]], "Contributing": [[3, "contributing"]], "Flint": [[4, null]], "Flint Programming Language": [[3, null]], "Installation": [[6, "installation"]], "Key Features": [[3, "key-features"]], "Module contents": [[1, "module-flint"], [2, "module-flint.ast"], [5, "module-tools"]], "Submodules": [[1, "submodules"], [2, "submodules"], [5, "submodules"]], "Subpackages": [[1, "subpackages"]], "Usage": [[6, null]], "flint package": [[1, null]], "flint.ast package": [[2, null]], "flint.ast.expr module": [[2, "module-flint.ast.expr"]], "flint.ast.stmt module": [[2, "module-flint.ast.stmt"]], "flint.environment module": [[1, "module-flint.environment"]], "flint.flint module": [[1, "module-flint.flint"]], "flint.flint_callable module": [[1, "module-flint.flint_callable"]], "flint.flint_function module": [[1, "module-flint.flint_function"]], "flint.interpreter module": [[1, "module-flint.interpreter"]], "flint.parser module": [[1, "module-flint.parser"]], "flint.runtime_error module": [[1, "module-flint.runtime_error"]], "flint.scanner module": [[1, "module-flint.scanner"]], "flint.token module": [[1, "module-flint.token"]], "flint.token_types module": [[1, "module-flint.token_types"]], "tools package": [[5, null]], "tools.ast_printer module": [[5, "module-tools.ast_printer"]], "tools.generate_ast module": [[5, "module-tools.generate_ast"]], "tools.raise_error module": [[5, "module-tools.raise_error"]]}, "docnames": ["examples", "flint", "flint.ast", "index", "modules", "tools", "usage"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["examples.rst", "flint.rst", "flint.ast.rst", "index.rst", "modules.rst", "tools.rst", "usage.rst"], "indexentries": {"__str__() (flint.token.token method)": [[1, "flint.token.Token.__str__", false]], "accept() (flint.ast.expr.assign method)": [[2, "flint.ast.expr.Assign.accept", false]], "accept() (flint.ast.expr.binary method)": [[2, "flint.ast.expr.Binary.accept", false]], "accept() (flint.ast.expr.call method)": [[2, "flint.ast.expr.Call.accept", false]], "accept() (flint.ast.expr.expr method)": [[2, "flint.ast.expr.Expr.accept", false]], "accept() (flint.ast.expr.grouping method)": [[2, "flint.ast.expr.Grouping.accept", false]], "accept() (flint.ast.expr.literal method)": [[2, "flint.ast.expr.Literal.accept", false]], "accept() (flint.ast.expr.logical method)": [[2, "flint.ast.expr.Logical.accept", false]], "accept() (flint.ast.expr.unary method)": [[2, "flint.ast.expr.Unary.accept", false]], "accept() (flint.ast.expr.variable method)": [[2, "flint.ast.expr.Variable.accept", false]], "accept() (flint.ast.stmt.block method)": [[2, "flint.ast.stmt.Block.accept", false]], "accept() (flint.ast.stmt.expression method)": [[2, "flint.ast.stmt.Expression.accept", false]], "accept() (flint.ast.stmt.function method)": [[2, "flint.ast.stmt.Function.accept", false]], "accept() (flint.ast.stmt.if_stmt method)": [[2, "flint.ast.stmt.If_stmt.accept", false]], "accept() (flint.ast.stmt.print method)": [[2, "flint.ast.stmt.Print.accept", false]], "accept() (flint.ast.stmt.stmt method)": [[2, "flint.ast.stmt.Stmt.accept", false]], "accept() (flint.ast.stmt.var method)": [[2, "flint.ast.stmt.Var.accept", false]], "accept() (flint.ast.stmt.while_stmt method)": [[2, "flint.ast.stmt.While_stmt.accept", false]], "add_token() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.add_token", false]], "advance() (flint.parser.parser method)": [[1, "flint.parser.Parser.advance", false]], "advance() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.advance", false]], "and_logic() (flint.parser.parser method)": [[1, "flint.parser.Parser.and_logic", false]], "arity() (flint.flint_callable.clockcallable method)": [[1, "flint.flint_callable.ClockCallable.arity", false]], "arity() (flint.flint_callable.flintcallable method)": [[1, "flint.flint_callable.FlintCallable.arity", false]], "arity() (flint.flint_function.flintfunction method)": [[1, "flint.flint_function.FlintFunction.arity", false]], "assign (class in flint.ast.expr)": [[2, "flint.ast.expr.Assign", false]], "assign (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.ASSIGN", false]], "assign() (flint.environment.environment method)": [[1, "flint.environment.Environment.assign", false]], "assignment() (flint.parser.parser method)": [[1, "flint.parser.Parser.assignment", false]], "asterisk (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.ASTERISK", false]], "astprinter (class in tools.ast_printer)": [[5, "tools.ast_printer.AstPrinter", false]], "binary (class in flint.ast.expr)": [[2, "flint.ast.expr.Binary", false]], "binary_expr() (flint.parser.parser method)": [[1, "flint.parser.Parser.binary_expr", false]], "block (class in flint.ast.stmt)": [[2, "flint.ast.stmt.Block", false]], "block() (flint.parser.parser method)": [[1, "flint.parser.Parser.block", false]], "call (class in flint.ast.expr)": [[2, "flint.ast.expr.Call", false]], "call() (flint.flint_callable.clockcallable method)": [[1, "flint.flint_callable.ClockCallable.call", false]], "call() (flint.flint_callable.flintcallable method)": [[1, "flint.flint_callable.FlintCallable.call", false]], "call() (flint.flint_function.flintfunction method)": [[1, "flint.flint_function.FlintFunction.call", false]], "call() (flint.parser.parser method)": [[1, "flint.parser.Parser.call", false]], "check() (flint.parser.parser method)": [[1, "flint.parser.Parser.check", false]], "check_number_operand() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.check_number_operand", false]], "check_number_operands() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.check_number_operands", false]], "clockcallable (class in flint.flint_callable)": [[1, "flint.flint_callable.ClockCallable", false]], "comma (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.COMMA", false]], "comparision() (flint.parser.parser method)": [[1, "flint.parser.Parser.comparision", false]], "consume() (flint.parser.parser method)": [[1, "flint.parser.Parser.consume", false]], "current (flint.parser.parser attribute)": [[1, "flint.parser.Parser.current", false]], "customruntimeerror": [[1, "flint.runtime_error.CustomRunTimeError", false]], "declaration() (flint.parser.parser method)": [[1, "flint.parser.Parser.declaration", false]], "define() (flint.environment.environment method)": [[1, "flint.environment.Environment.define", false]], "define_ast() (tools.generate_ast.generateast static method)": [[5, "tools.generate_ast.GenerateAst.define_ast", false]], "define_type() (tools.generate_ast.generateast static method)": [[5, "tools.generate_ast.GenerateAst.define_type", false]], "define_visitor() (tools.generate_ast.generateast static method)": [[5, "tools.generate_ast.GenerateAst.define_visitor", false]], "dot (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.DOT", false]], "environment (class in flint.environment)": [[1, "flint.environment.Environment", false]], "eof (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.EOF", false]], "equal (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.EQUAL", false]], "equal_equal (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.EQUAL_EQUAL", false]], "equality() (flint.parser.parser method)": [[1, "flint.parser.Parser.equality", false]], "error() (flint.parser.parser method)": [[1, "flint.parser.Parser.error", false]], "error() (in module tools.raise_error)": [[5, "tools.raise_error.error", false]], "evaluate() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.evaluate", false]], "exclamation (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.EXCLAMATION", false]], "exclamation_equal (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.EXCLAMATION_EQUAL", false]], "execute() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.execute", false]], "execute_block() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.execute_block", false]], "expr (class in flint.ast.expr)": [[2, "flint.ast.expr.Expr", false]], "expression (class in flint.ast.stmt)": [[2, "flint.ast.stmt.Expression", false]], "expression() (flint.parser.parser method)": [[1, "flint.parser.Parser.expression", false]], "expression_statement() (flint.parser.parser method)": [[1, "flint.parser.Parser.expression_statement", false]], "exprvisitor (class in flint.ast.expr)": [[2, "flint.ast.expr.ExprVisitor", false]], "factor() (flint.parser.parser method)": [[1, "flint.parser.Parser.factor", false]], "finish_call() (flint.parser.parser method)": [[1, "flint.parser.Parser.finish_call", false]], "flint": [[1, "module-flint", false]], "flint (class in flint.flint)": [[1, "flint.flint.Flint", false]], "flint.ast": [[2, "module-flint.ast", false]], "flint.ast.expr": [[2, "module-flint.ast.expr", false]], "flint.ast.stmt": [[2, "module-flint.ast.stmt", false]], "flint.environment": [[1, "module-flint.environment", false]], "flint.flint": [[1, "module-flint.flint", false]], "flint.flint_callable": [[1, "module-flint.flint_callable", false]], "flint.flint_function": [[1, "module-flint.flint_function", false]], "flint.interpreter": [[1, "module-flint.interpreter", false]], "flint.parser": [[1, "module-flint.parser", false]], "flint.runtime_error": [[1, "module-flint.runtime_error", false]], "flint.scanner": [[1, "module-flint.scanner", false]], "flint.token": [[1, "module-flint.token", false]], "flint.token_types": [[1, "module-flint.token_types", false]], "flintcallable (class in flint.flint_callable)": [[1, "flint.flint_callable.FlintCallable", false]], "flintfunction (class in flint.flint_function)": [[1, "flint.flint_function.FlintFunction", false]], "for_statement() (flint.parser.parser method)": [[1, "flint.parser.Parser.for_statement", false]], "forward_slash (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.FORWARD_SLASH", false]], "function (class in flint.ast.stmt)": [[2, "flint.ast.stmt.Function", false]], "function() (flint.parser.parser method)": [[1, "flint.parser.Parser.function", false]], "generateast (class in tools.generate_ast)": [[5, "tools.generate_ast.GenerateAst", false]], "get() (flint.environment.environment method)": [[1, "flint.environment.Environment.get", false]], "global_environment (flint.flint.flint attribute)": [[1, "flint.flint.Flint.global_environment", false]], "greater_than (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.GREATER_THAN", false]], "greater_than_equal (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.GREATER_THAN_EQUAL", false]], "grouping (class in flint.ast.expr)": [[2, "flint.ast.expr.Grouping", false]], "had_error (flint.flint.flint attribute)": [[1, "flint.flint.Flint.had_error", false]], "had_runtime_error (flint.flint.flint attribute)": [[1, "flint.flint.Flint.had_runtime_error", false]], "identifier (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.IDENTIFIER", false]], "if_statement() (flint.parser.parser method)": [[1, "flint.parser.Parser.if_statement", false]], "if_stmt (class in flint.ast.stmt)": [[2, "flint.ast.stmt.If_stmt", false]], "indentifier() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.indentifier", false]], "interpret() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.interpret", false]], "interpreter (class in flint.interpreter)": [[1, "flint.interpreter.Interpreter", false]], "is_alpha() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.is_alpha", false]], "is_alphanumeric() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.is_alphanumeric", false]], "is_at_end() (flint.parser.parser method)": [[1, "flint.parser.Parser.is_at_end", false]], "is_at_end() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.is_at_end", false]], "is_digit() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.is_digit", false]], "is_equal() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.is_equal", false]], "is_truthy() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.is_truthy", false]], "keyword_and (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_AND", false]], "keyword_class (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_CLASS", false]], "keyword_else (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_ELSE", false]], "keyword_false (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_FALSE", false]], "keyword_for (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_FOR", false]], "keyword_function (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_FUNCTION", false]], "keyword_if (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_IF", false]], "keyword_nil (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_NIL", false]], "keyword_or (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_OR", false]], "keyword_print (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_PRINT", false]], "keyword_return (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_RETURN", false]], "keyword_super (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_SUPER", false]], "keyword_this (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_THIS", false]], "keyword_true (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_TRUE", false]], "keyword_variable (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_VARIABLE", false]], "keyword_while (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.KEYWORD_WHILE", false]], "keywords (flint.scanner.scanner attribute)": [[1, "flint.scanner.Scanner.KEYWORDS", false]], "left_brace (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.LEFT_BRACE", false]], "left_paren (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.LEFT_PAREN", false]], "less_than (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.LESS_THAN", false]], "less_than_equal (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.LESS_THAN_EQUAL", false]], "literal (class in flint.ast.expr)": [[2, "flint.ast.expr.Literal", false]], "log_environment() (flint.environment.environment method)": [[1, "flint.environment.Environment.log_environment", false]], "logical (class in flint.ast.expr)": [[2, "flint.ast.expr.Logical", false]], "main() (flint.flint.flint static method)": [[1, "flint.flint.Flint.main", false]], "main() (tools.generate_ast.generateast static method)": [[5, "tools.generate_ast.GenerateAst.main", false]], "match() (flint.parser.parser method)": [[1, "flint.parser.Parser.match", false]], "match() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.match", false]], "minus (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.MINUS", false]], "module": [[1, "module-flint", false], [1, "module-flint.environment", false], [1, "module-flint.flint", false], [1, "module-flint.flint_callable", false], [1, "module-flint.flint_function", false], [1, "module-flint.interpreter", false], [1, "module-flint.parser", false], [1, "module-flint.runtime_error", false], [1, "module-flint.scanner", false], [1, "module-flint.token", false], [1, "module-flint.token_types", false], [2, "module-flint.ast", false], [2, "module-flint.ast.expr", false], [2, "module-flint.ast.stmt", false], [5, "module-tools", false], [5, "module-tools.ast_printer", false], [5, "module-tools.generate_ast", false], [5, "module-tools.raise_error", false]], "number() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.number", false]], "number_literal (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.NUMBER_LITERAL", false]], "or_logic() (flint.parser.parser method)": [[1, "flint.parser.Parser.or_logic", false]], "parenthesize() (tools.ast_printer.astprinter method)": [[5, "tools.ast_printer.AstPrinter.parenthesize", false]], "parse() (flint.parser.parser method)": [[1, "flint.parser.Parser.parse", false]], "parser (class in flint.parser)": [[1, "flint.parser.Parser", false]], "parser.parseerror": [[1, "flint.parser.Parser.ParseError", false]], "peek() (flint.parser.parser method)": [[1, "flint.parser.Parser.peek", false]], "peek() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.peek", false]], "peek_next() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.peek_next", false]], "plus (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.PLUS", false]], "previous() (flint.parser.parser method)": [[1, "flint.parser.Parser.previous", false]], "primary() (flint.parser.parser method)": [[1, "flint.parser.Parser.primary", false]], "print (class in flint.ast.stmt)": [[2, "flint.ast.stmt.Print", false]], "print_ast() (tools.ast_printer.astprinter method)": [[5, "tools.ast_printer.AstPrinter.print_ast", false]], "print_statement() (flint.parser.parser method)": [[1, "flint.parser.Parser.print_statement", false]], "report() (in module tools.raise_error)": [[5, "tools.raise_error.report", false]], "right_brace (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.RIGHT_BRACE", false]], "right_paren (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.RIGHT_PAREN", false]], "run() (flint.flint.flint static method)": [[1, "flint.flint.Flint.run", false]], "run_file() (flint.flint.flint static method)": [[1, "flint.flint.Flint.run_file", false]], "run_prompt() (flint.flint.flint static method)": [[1, "flint.flint.Flint.run_prompt", false]], "runtime_error() (in module tools.raise_error)": [[5, "tools.raise_error.runtime_error", false]], "scan_multiline_comment() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.scan_multiline_comment", false]], "scan_token() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.scan_token", false]], "scan_tokens() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.scan_tokens", false]], "scanner (class in flint.scanner)": [[1, "flint.scanner.Scanner", false]], "semicolon (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.SEMICOLON", false]], "statement() (flint.parser.parser method)": [[1, "flint.parser.Parser.statement", false]], "stmt (class in flint.ast.stmt)": [[2, "flint.ast.stmt.Stmt", false]], "stmtvisitor (class in flint.ast.stmt)": [[2, "flint.ast.stmt.StmtVisitor", false]], "string() (flint.scanner.scanner method)": [[1, "flint.scanner.Scanner.string", false]], "string_literal (flint.token_types.tokentype attribute)": [[1, "flint.token_types.TokenType.STRING_LITERAL", false]], "stringify() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.stringify", false]], "synchronize() (flint.parser.parser method)": [[1, "flint.parser.Parser.synchronize", false]], "term() (flint.parser.parser method)": [[1, "flint.parser.Parser.term", false]], "to_string() (flint.flint_callable.clockcallable method)": [[1, "flint.flint_callable.ClockCallable.to_string", false]], "to_string() (flint.flint_callable.flintcallable method)": [[1, "flint.flint_callable.FlintCallable.to_string", false]], "to_string() (flint.flint_function.flintfunction method)": [[1, "flint.flint_function.FlintFunction.to_string", false]], "token (class in flint.token)": [[1, "flint.token.Token", false]], "tokens (flint.parser.parser property)": [[1, "flint.parser.Parser.tokens", false]], "tokentype (class in flint.token_types)": [[1, "flint.token_types.TokenType", false]], "tools": [[5, "module-tools", false]], "tools.ast_printer": [[5, "module-tools.ast_printer", false]], "tools.generate_ast": [[5, "module-tools.generate_ast", false]], "tools.raise_error": [[5, "module-tools.raise_error", false]], "unary (class in flint.ast.expr)": [[2, "flint.ast.expr.Unary", false]], "unary() (flint.parser.parser method)": [[1, "flint.parser.Parser.unary", false]], "var (class in flint.ast.stmt)": [[2, "flint.ast.stmt.Var", false]], "var_declaration() (flint.parser.parser method)": [[1, "flint.parser.Parser.var_declaration", false]], "variable (class in flint.ast.expr)": [[2, "flint.ast.expr.Variable", false]], "visit_assign() (flint.ast.expr.exprvisitor method)": [[2, "flint.ast.expr.ExprVisitor.visit_assign", false]], "visit_assign() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_assign", false]], "visit_binary() (flint.ast.expr.exprvisitor method)": [[2, "flint.ast.expr.ExprVisitor.visit_binary", false]], "visit_binary() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_binary", false]], "visit_binary() (tools.ast_printer.astprinter method)": [[5, "tools.ast_printer.AstPrinter.visit_binary", false]], "visit_block() (flint.ast.stmt.stmtvisitor method)": [[2, "flint.ast.stmt.StmtVisitor.visit_block", false]], "visit_block() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_block", false]], "visit_call() (flint.ast.expr.exprvisitor method)": [[2, "flint.ast.expr.ExprVisitor.visit_call", false]], "visit_call() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_call", false]], "visit_expression() (flint.ast.stmt.stmtvisitor method)": [[2, "flint.ast.stmt.StmtVisitor.visit_expression", false]], "visit_expression() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_expression", false]], "visit_function() (flint.ast.stmt.stmtvisitor method)": [[2, "flint.ast.stmt.StmtVisitor.visit_function", false]], "visit_function() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_function", false]], "visit_grouping() (flint.ast.expr.exprvisitor method)": [[2, "flint.ast.expr.ExprVisitor.visit_grouping", false]], "visit_grouping() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_grouping", false]], "visit_grouping() (tools.ast_printer.astprinter method)": [[5, "tools.ast_printer.AstPrinter.visit_grouping", false]], "visit_if_stmt() (flint.ast.stmt.stmtvisitor method)": [[2, "flint.ast.stmt.StmtVisitor.visit_if_stmt", false]], "visit_if_stmt() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_if_stmt", false]], "visit_literal() (flint.ast.expr.exprvisitor method)": [[2, "flint.ast.expr.ExprVisitor.visit_literal", false]], "visit_literal() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_literal", false]], "visit_literal() (tools.ast_printer.astprinter method)": [[5, "tools.ast_printer.AstPrinter.visit_literal", false]], "visit_logical() (flint.ast.expr.exprvisitor method)": [[2, "flint.ast.expr.ExprVisitor.visit_logical", false]], "visit_logical() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_logical", false]], "visit_print() (flint.ast.stmt.stmtvisitor method)": [[2, "flint.ast.stmt.StmtVisitor.visit_print", false]], "visit_print() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_print", false]], "visit_unary() (flint.ast.expr.exprvisitor method)": [[2, "flint.ast.expr.ExprVisitor.visit_unary", false]], "visit_unary() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_unary", false]], "visit_unary() (tools.ast_printer.astprinter method)": [[5, "tools.ast_printer.AstPrinter.visit_unary", false]], "visit_var() (flint.ast.stmt.stmtvisitor method)": [[2, "flint.ast.stmt.StmtVisitor.visit_var", false]], "visit_var() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_var", false]], "visit_variable() (flint.ast.expr.exprvisitor method)": [[2, "flint.ast.expr.ExprVisitor.visit_variable", false]], "visit_variable() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_variable", false]], "visit_while_stmt() (flint.ast.stmt.stmtvisitor method)": [[2, "flint.ast.stmt.StmtVisitor.visit_while_stmt", false]], "visit_while_stmt() (flint.interpreter.interpreter method)": [[1, "flint.interpreter.Interpreter.visit_while_stmt", false]], "while_statement() (flint.parser.parser method)": [[1, "flint.parser.Parser.while_statement", false]], "while_stmt (class in flint.ast.stmt)": [[2, "flint.ast.stmt.While_stmt", false]]}, "objects": {"": [[1, 0, 0, "-", "flint"], [5, 0, 0, "-", "tools"]], "flint": [[2, 0, 0, "-", "ast"], [1, 0, 0, "-", "environment"], [1, 0, 0, "-", "flint"], [1, 0, 0, "-", "flint_callable"], [1, 0, 0, "-", "flint_function"], [1, 0, 0, "-", "interpreter"], [1, 0, 0, "-", "parser"], [1, 0, 0, "-", "runtime_error"], [1, 0, 0, "-", "scanner"], [1, 0, 0, "-", "token"], [1, 0, 0, "-", "token_types"]], "flint.ast": [[2, 0, 0, "-", "expr"], [2, 0, 0, "-", "stmt"]], "flint.ast.expr": [[2, 1, 1, "", "Assign"], [2, 1, 1, "", "Binary"], [2, 1, 1, "", "Call"], [2, 1, 1, "", "Expr"], [2, 1, 1, "", "ExprVisitor"], [2, 1, 1, "", "Grouping"], [2, 1, 1, "", "Literal"], [2, 1, 1, "", "Logical"], [2, 1, 1, "", "Unary"], [2, 1, 1, "", "Variable"]], "flint.ast.expr.Assign": [[2, 2, 1, "", "accept"]], "flint.ast.expr.Binary": [[2, 2, 1, "", "accept"]], "flint.ast.expr.Call": [[2, 2, 1, "", "accept"]], "flint.ast.expr.Expr": [[2, 2, 1, "", "accept"]], "flint.ast.expr.ExprVisitor": [[2, 2, 1, "", "visit_assign"], [2, 2, 1, "", "visit_binary"], [2, 2, 1, "", "visit_call"], [2, 2, 1, "", "visit_grouping"], [2, 2, 1, "", "visit_literal"], [2, 2, 1, "", "visit_logical"], [2, 2, 1, "", "visit_unary"], [2, 2, 1, "", "visit_variable"]], "flint.ast.expr.Grouping": [[2, 2, 1, "", "accept"]], "flint.ast.expr.Literal": [[2, 2, 1, "", "accept"]], "flint.ast.expr.Logical": [[2, 2, 1, "", "accept"]], "flint.ast.expr.Unary": [[2, 2, 1, "", "accept"]], "flint.ast.expr.Variable": [[2, 2, 1, "", "accept"]], "flint.ast.stmt": [[2, 1, 1, "", "Block"], [2, 1, 1, "", "Expression"], [2, 1, 1, "", "Function"], [2, 1, 1, "", "If_stmt"], [2, 1, 1, "", "Print"], [2, 1, 1, "", "Stmt"], [2, 1, 1, "", "StmtVisitor"], [2, 1, 1, "", "Var"], [2, 1, 1, "", "While_stmt"]], "flint.ast.stmt.Block": [[2, 2, 1, "", "accept"]], "flint.ast.stmt.Expression": [[2, 2, 1, "", "accept"]], "flint.ast.stmt.Function": [[2, 2, 1, "", "accept"]], "flint.ast.stmt.If_stmt": [[2, 2, 1, "", "accept"]], "flint.ast.stmt.Print": [[2, 2, 1, "", "accept"]], "flint.ast.stmt.Stmt": [[2, 2, 1, "", "accept"]], "flint.ast.stmt.StmtVisitor": [[2, 2, 1, "", "visit_block"], [2, 2, 1, "", "visit_expression"], [2, 2, 1, "", "visit_function"], [2, 2, 1, "", "visit_if_stmt"], [2, 2, 1, "", "visit_print"], [2, 2, 1, "", "visit_var"], [2, 2, 1, "", "visit_while_stmt"]], "flint.ast.stmt.Var": [[2, 2, 1, "", "accept"]], "flint.ast.stmt.While_stmt": [[2, 2, 1, "", "accept"]], "flint.environment": [[1, 1, 1, "", "Environment"]], "flint.environment.Environment": [[1, 2, 1, "", "assign"], [1, 2, 1, "", "define"], [1, 2, 1, "", "get"], [1, 2, 1, "", "log_environment"]], "flint.flint": [[1, 1, 1, "", "Flint"]], "flint.flint.Flint": [[1, 3, 1, "", "global_environment"], [1, 3, 1, "", "had_error"], [1, 3, 1, "", "had_runtime_error"], [1, 2, 1, "", "main"], [1, 2, 1, "", "run"], [1, 2, 1, "", "run_file"], [1, 2, 1, "", "run_prompt"]], "flint.flint_callable": [[1, 1, 1, "", "ClockCallable"], [1, 1, 1, "", "FlintCallable"]], "flint.flint_callable.ClockCallable": [[1, 2, 1, "", "arity"], [1, 2, 1, "", "call"], [1, 2, 1, "", "to_string"]], "flint.flint_callable.FlintCallable": [[1, 2, 1, "", "arity"], [1, 2, 1, "", "call"], [1, 2, 1, "", "to_string"]], "flint.flint_function": [[1, 1, 1, "", "FlintFunction"]], "flint.flint_function.FlintFunction": [[1, 2, 1, "", "arity"], [1, 2, 1, "", "call"], [1, 2, 1, "", "to_string"]], "flint.interpreter": [[1, 1, 1, "", "Interpreter"]], "flint.interpreter.Interpreter": [[1, 2, 1, "", "check_number_operand"], [1, 2, 1, "", "check_number_operands"], [1, 2, 1, "", "evaluate"], [1, 2, 1, "", "execute"], [1, 2, 1, "", "execute_block"], [1, 2, 1, "", "interpret"], [1, 2, 1, "", "is_equal"], [1, 2, 1, "", "is_truthy"], [1, 2, 1, "", "stringify"], [1, 2, 1, "", "visit_assign"], [1, 2, 1, "", "visit_binary"], [1, 2, 1, "", "visit_block"], [1, 2, 1, "", "visit_call"], [1, 2, 1, "", "visit_expression"], [1, 2, 1, "", "visit_function"], [1, 2, 1, "", "visit_grouping"], [1, 2, 1, "", "visit_if_stmt"], [1, 2, 1, "", "visit_literal"], [1, 2, 1, "", "visit_logical"], [1, 2, 1, "", "visit_print"], [1, 2, 1, "", "visit_unary"], [1, 2, 1, "", "visit_var"], [1, 2, 1, "", "visit_variable"], [1, 2, 1, "", "visit_while_stmt"]], "flint.parser": [[1, 1, 1, "", "Parser"]], "flint.parser.Parser": [[1, 4, 1, "", "ParseError"], [1, 2, 1, "", "advance"], [1, 2, 1, "", "and_logic"], [1, 2, 1, "", "assignment"], [1, 2, 1, "", "binary_expr"], [1, 2, 1, "", "block"], [1, 2, 1, "", "call"], [1, 2, 1, "", "check"], [1, 2, 1, "", "comparision"], [1, 2, 1, "", "consume"], [1, 3, 1, "", "current"], [1, 2, 1, "", "declaration"], [1, 2, 1, "", "equality"], [1, 2, 1, "", "error"], [1, 2, 1, "", "expression"], [1, 2, 1, "", "expression_statement"], [1, 2, 1, "", "factor"], [1, 2, 1, "", "finish_call"], [1, 2, 1, "", "for_statement"], [1, 2, 1, "", "function"], [1, 2, 1, "", "if_statement"], [1, 2, 1, "", "is_at_end"], [1, 2, 1, "", "match"], [1, 2, 1, "", "or_logic"], [1, 2, 1, "", "parse"], [1, 2, 1, "", "peek"], [1, 2, 1, "", "previous"], [1, 2, 1, "", "primary"], [1, 2, 1, "", "print_statement"], [1, 2, 1, "", "statement"], [1, 2, 1, "", "synchronize"], [1, 2, 1, "", "term"], [1, 5, 1, "", "tokens"], [1, 2, 1, "", "unary"], [1, 2, 1, "", "var_declaration"], [1, 2, 1, "", "while_statement"]], "flint.runtime_error": [[1, 4, 1, "", "CustomRunTimeError"]], "flint.scanner": [[1, 1, 1, "", "Scanner"]], "flint.scanner.Scanner": [[1, 3, 1, "", "KEYWORDS"], [1, 2, 1, "", "add_token"], [1, 2, 1, "", "advance"], [1, 2, 1, "", "indentifier"], [1, 2, 1, "", "is_alpha"], [1, 2, 1, "", "is_alphanumeric"], [1, 2, 1, "", "is_at_end"], [1, 2, 1, "", "is_digit"], [1, 2, 1, "", "match"], [1, 2, 1, "", "number"], [1, 2, 1, "", "peek"], [1, 2, 1, "", "peek_next"], [1, 2, 1, "", "scan_multiline_comment"], [1, 2, 1, "", "scan_token"], [1, 2, 1, "", "scan_tokens"], [1, 2, 1, "", "string"]], "flint.token": [[1, 1, 1, "", "Token"]], "flint.token.Token": [[1, 2, 1, "", "__str__"]], "flint.token_types": [[1, 1, 1, "", "TokenType"]], "flint.token_types.TokenType": [[1, 3, 1, "", "ASSIGN"], [1, 3, 1, "", "ASTERISK"], [1, 3, 1, "", "COMMA"], [1, 3, 1, "", "DOT"], [1, 3, 1, "", "EOF"], [1, 3, 1, "", "EQUAL"], [1, 3, 1, "", "EQUAL_EQUAL"], [1, 3, 1, "", "EXCLAMATION"], [1, 3, 1, "", "EXCLAMATION_EQUAL"], [1, 3, 1, "", "FORWARD_SLASH"], [1, 3, 1, "", "GREATER_THAN"], [1, 3, 1, "", "GREATER_THAN_EQUAL"], [1, 3, 1, "", "IDENTIFIER"], [1, 3, 1, "", "KEYWORD_AND"], [1, 3, 1, "", "KEYWORD_CLASS"], [1, 3, 1, "", "KEYWORD_ELSE"], [1, 3, 1, "", "KEYWORD_FALSE"], [1, 3, 1, "", "KEYWORD_FOR"], [1, 3, 1, "", "KEYWORD_FUNCTION"], [1, 3, 1, "", "KEYWORD_IF"], [1, 3, 1, "", "KEYWORD_NIL"], [1, 3, 1, "", "KEYWORD_OR"], [1, 3, 1, "", "KEYWORD_PRINT"], [1, 3, 1, "", "KEYWORD_RETURN"], [1, 3, 1, "", "KEYWORD_SUPER"], [1, 3, 1, "", "KEYWORD_THIS"], [1, 3, 1, "", "KEYWORD_TRUE"], [1, 3, 1, "", "KEYWORD_VARIABLE"], [1, 3, 1, "", "KEYWORD_WHILE"], [1, 3, 1, "", "LEFT_BRACE"], [1, 3, 1, "", "LEFT_PAREN"], [1, 3, 1, "", "LESS_THAN"], [1, 3, 1, "", "LESS_THAN_EQUAL"], [1, 3, 1, "", "MINUS"], [1, 3, 1, "", "NUMBER_LITERAL"], [1, 3, 1, "", "PLUS"], [1, 3, 1, "", "RIGHT_BRACE"], [1, 3, 1, "", "RIGHT_PAREN"], [1, 3, 1, "", "SEMICOLON"], [1, 3, 1, "", "STRING_LITERAL"]], "tools": [[5, 0, 0, "-", "ast_printer"], [5, 0, 0, "-", "generate_ast"], [5, 0, 0, "-", "raise_error"]], "tools.ast_printer": [[5, 1, 1, "", "AstPrinter"]], "tools.ast_printer.AstPrinter": [[5, 2, 1, "", "parenthesize"], [5, 2, 1, "", "print_ast"], [5, 2, 1, "", "visit_binary"], [5, 2, 1, "", "visit_grouping"], [5, 2, 1, "", "visit_literal"], [5, 2, 1, "", "visit_unary"]], "tools.generate_ast": [[5, 1, 1, "", "GenerateAst"]], "tools.generate_ast.GenerateAst": [[5, 2, 1, "", "define_ast"], [5, 2, 1, "", "define_type"], [5, 2, 1, "", "define_visitor"], [5, 2, 1, "", "main"]], "tools.raise_error": [[5, 6, 1, "", "error"], [5, 6, 1, "", "report"], [5, 6, 1, "", "runtime_error"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "property", "Python property"], "6": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:property", "6": "py:function"}, "terms": {"": [0, 1, 3], "0": [0, 1], "1": [0, 1], "10": [0, 1, 3], "11": 1, "12": 1, "13": 1, "14": 1, "15": 1, "16": 1, "17": 1, "18": 1, "19": 1, "2": 1, "20": [0, 1], "21": 1, "22": 1, "23": 1, "24": 1, "25": 1, "26": 1, "27": 1, "28": 1, "29": 1, "3": 1, "30": [0, 1], "31": 1, "32": 1, "33": 1, "34": 1, "35": 1, "36": 1, "37": 1, "38": 1, "39": 1, "4": 1, "40": 1, "5": [0, 1], "6": 1, "64": 1, "7": 1, "8": 1, "9": 1, "A": 1, "For": 3, "If": [1, 3], "It": [1, 3], "One": 1, "The": 1, "To": 6, "__str__": [1, 4], "_token": 1, "abc": 1, "abstract": 1, "accept": [1, 2], "access": 1, "activ": [3, 6], "actual": 1, "add": [0, 1, 3], "add_token": [1, 4], "advanc": [1, 3, 4], "after": 1, "against": 1, "all": 3, "allow": 3, "alphabet": 1, "alreadi": 1, "an": [1, 3, 5], "and_log": [1, 4], "ani": 1, "appear": 1, "applic": 1, "ar": [0, 1, 3], "arg": 5, "argument": [1, 2], "arithmet": 0, "ariti": [1, 4], "assign": [1, 2, 3, 4], "associ": 1, "ast": [1, 4, 5], "ast_print": [3, 4], "asterisk": [1, 4], "astprint": [4, 5], "attribut": 1, "automat": 3, "b": [0, 3], "back": [], "base": [1, 2, 3, 5], "base_nam": 5, "bash": [], "behind": 3, "better": 3, "binari": [1, 2, 5], "binary_expr": [1, 4], "block": [1, 2, 4], "bodi": [2, 3], "bool": 1, "both": [1, 3], "boundari": 1, "brace": [1, 3], "bug": 3, "built": [1, 3], "c": 1, "call": [0, 1, 2, 4], "callabl": 1, "calle": [1, 2], "can": [1, 3], "categor": 1, "char": 1, "charact": 1, "check": [1, 4], "check_number_operand": [1, 4], "class": [1, 2, 5], "class_nam": 5, "clockcal": [1, 4], "clone": 6, "code": [1, 3, 5], "collect": 1, "com": 6, "comma": [1, 4], "command": 1, "comment": 0, "comparis": [1, 4], "comparison": 1, "compil": 1, "complex": 3, "concept": 3, "condit": [0, 2], "consol": 1, "construct": 1, "consum": [1, 4], "contain": 1, "content": 4, "context": 1, "continu": 1, "control": 1, "convert": 1, "core": 3, "correspond": 1, "creat": [1, 3], "current": [1, 4], "custom": 1, "customruntimeerror": [1, 4, 5], "data": 3, "debug": 1, "declar": [0, 1, 3, 4], "default": 3, "defin": [1, 3, 4], "define_ast": [4, 5], "define_typ": [4, 5], "define_visitor": [4, 5], "definit": 3, "deleg": 1, "depend": 6, "descript": 1, "design": [], "detail": [], "determin": 1, "develop": 3, "differ": 3, "digit": 1, "document": 3, "doe": [1, 3], "doesn": 1, "dot": [1, 4], "dynam": 3, "e": 1, "each": 1, "els": [0, 1], "else_branch": 2, "empti": 1, "enclos": [1, 3], "encount": 1, "end": 1, "enhanc": 1, "ensur": 1, "enter": 1, "entri": 1, "enum": 1, "environ": [3, 4, 6], "eof": [1, 4], "equal": [1, 4], "equal_equ": [1, 4], "error": [1, 4, 5], "error_messag": 1, "establish": 3, "eval": 1, "evalu": [1, 4], "exampl": 3, "except": 1, "exclam": [1, 4], "exclamation_equ": [1, 4], "excut": 1, "execut": [1, 4], "execute_block": [1, 4], "exist": 1, "exit": 1, "expect": 1, "experi": 3, "experiment": 3, "explor": 3, "expr": [1, 4, 5], "express": [1, 2, 4], "expression_stat": [1, 4], "exprvisitor": [1, 2, 5], "extens": 0, "factor": [1, 4], "factori": 0, "fals": 1, "featur": [], "field_list": 5, "file": [1, 5], "file_nam": [0, 6], "filepath": 1, "find": 1, "finish_cal": [1, 4], "first": 6, "flint": [0, 6], "flint_cal": [3, 4], "flint_funct": [3, 4], "flintcal": [1, 4], "flintfunct": [1, 4], "float": 1, "flow": 1, "fn": [0, 1, 3], "follow": 1, "for_stat": [1, 4], "format": [1, 5], "forward_slash": [1, 4], "found": 1, "from": 1, "func": [], "function": [0, 1, 2, 3, 4], "functionstmt": 1, "funtion": 1, "futur": 1, "g": 1, "gener": [1, 5], "generate_ast": [3, 4], "generateast": [4, 5], "get": [1, 3, 4], "git": 6, "github": [3, 6], "give": 3, "given": 1, "global_environ": [1, 4], "gracefulli": 1, "greater": [0, 1], "greater_than": [1, 4], "greater_than_equ": [1, 4], "greet": 0, "group": [1, 2, 5], "guid": [3, 6], "ha": 1, "had_error": [1, 4], "had_runtime_error": [1, 4], "handl": [1, 5], "have": 1, "hello": 0, "help": 3, "here": 0, "hex": 6, "hobbi": 3, "hold": 3, "http": 6, "i": [0, 1, 3], "idea": 3, "ideal": 3, "identifi": [1, 4], "if_stat": [1, 4], "if_stmt": [1, 2], "indentifi": [1, 4], "indic": 1, "infer": 3, "inform": 3, "initi": [1, 2], "inner": [1, 3], "input": 1, "instal": 3, "int": [1, 5], "integ": 3, "intend": 3, "interpret": [3, 4], "intuit": 3, "is_alpha": [1, 4], "is_alphanumer": [1, 4], "is_at_end": [1, 4], "is_digit": [1, 4], "is_equ": [1, 4], "is_repl_mod": 1, "is_truthi": [1, 4], "isn": 3, "its": [1, 3, 5], "keyword": [1, 4], "keyword_and": [1, 4], "keyword_class": [1, 4], "keyword_els": [1, 4], "keyword_fals": [1, 4], "keyword_for": [1, 4], "keyword_funct": [1, 4], "keyword_if": [1, 4], "keyword_nil": [1, 4], "keyword_or": [1, 4], "keyword_print": [1, 4], "keyword_return": [1, 4], "keyword_sup": [1, 4], "keyword_thi": [1, 4], "keyword_tru": [1, 4], "keyword_vari": [1, 4], "keyword_whil": [1, 4], "kind": 1, "languag": [0, 1], "learn": 3, "left": [1, 2], "left_brac": [1, 4], "left_paren": [1, 4], "less": 1, "less_than": [1, 4], "less_than_equ": [1, 4], "letter": 1, "level": 1, "lexem": 1, "librari": 1, "lightweight": 3, "like": 3, "line": [0, 1, 5], "link": 0, "list": 1, "liter": [1, 2, 5], "log": 1, "log_environ": [1, 4], "logic": [1, 2], "loop": [0, 1], "magic": 3, "mai": 1, "main": [1, 4, 5], "maintain": 1, "make": 3, "match": [1, 4], "messag": [1, 5], "method": 1, "mind": 3, "minu": [1, 4], "mode": 1, "modul": [3, 4], "more": [0, 1, 3], "most": 1, "mrinmoi": 6, "multi": 0, "n": 0, "name": [1, 2, 3, 5], "need": 0, "new": [1, 3], "next": 1, "nil": 1, "node": [1, 5], "none": [1, 5], "now": 3, "null": 3, "number": [1, 4], "number_liter": [1, 4], "obj": 1, "object": [1, 2, 5], "occur": 1, "offer": 3, "one": 1, "onli": 1, "oper": [0, 1, 2], "operand": 1, "option": 1, "or_log": [1, 4], "otherwis": 1, "output": 1, "output_dir": 5, "packag": [3, 4], "param": [1, 2], "paramet": [1, 3], "paren": 2, "parenthes": [1, 4, 5], "pars": [1, 4], "parseerror": [1, 4], "parser": [3, 4], "part": 1, "past": 1, "path": 1, "peek": [1, 4], "peek_next": [1, 4], "perfect": 3, "person": 3, "pip": 6, "playground": 3, "pleas": [], "plu": [1, 4], "poetri": 6, "point": 1, "pointer": 1, "pos_wher": 5, "posit": 1, "present": 1, "prevent": 1, "previou": [1, 4], "primari": [1, 4], "print": [0, 1, 2, 3, 5], "print_ast": [4, 5], "print_stat": [1, 4], "printstmt": 1, "process": 6, "profession": 3, "program": [1, 6], "project": 3, "prompt": 1, "properti": 1, "prototyp": 3, "provid": [0, 1], "pull": 3, "purpos": 1, "python": 1, "qualnam": 1, "quick": 3, "rais": 1, "raise_error": [3, 4], "reach": 1, "read": 1, "recent": 1, "recov": 1, "recurs": 0, "redefinit": 1, "remov": 1, "repeatedli": 1, "repl": 1, "replac": 1, "repo": 6, "report": [1, 3, 4, 5], "repositori": [], "repres": 1, "represent": 1, "request": 3, "reserv": 1, "restructuredtext": [], "result": [0, 1], "retriev": 1, "return": [0, 1, 3], "right": [1, 2], "right_brac": [1, 4], "right_paren": [1, 4], "rtype": 1, "run": [1, 4, 6], "run_fil": [1, 4], "run_prompt": [1, 4], "runtim": [1, 5], "runtime_error": [3, 4, 5], "runtimeerror": 1, "same": 1, "scan_multiline_com": [1, 4], "scan_token": [1, 4], "scanner": [3, 4], "scope": 1, "script": 1, "section": 6, "see": 3, "self": 1, "semant": 1, "semicolon": [1, 4], "sequenti": 1, "serv": 3, "set": 1, "shell": 6, "should": 1, "showcas": 0, "signatur": 3, "simpl": [0, 3], "singl": [0, 1], "some": 0, "sourc": 1, "special": 1, "specif": [1, 5], "star": 3, "start": [1, 3], "statement": [0, 1, 2, 4], "static": [1, 5], "statu": 1, "step": [], "stmt": [1, 4], "stmtvisitor": [1, 2], "store": 1, "str": [1, 5], "straightforward": 3, "stream": 1, "string": [1, 3, 4], "string_liter": [1, 4], "stringifi": [1, 4], "sub": 1, "sub_expr_method": 1, "subclass": 5, "submit": 3, "submodul": [3, 4], "subpackag": [3, 4], "subsequ": 1, "sugar": 0, "suggest": 3, "sum": 0, "super": 1, "support": [1, 3], "synchron": [1, 4], "syntact": 0, "syntax": [1, 3], "t": [1, 3], "tachyon": 1, "take": 1, "term": [1, 4], "termin": 1, "test": 3, "than": [0, 1], "them": 1, "then_branch": 2, "thi": [0, 1, 3, 6], "those": 3, "through": [1, 3, 6], "to_str": [1, 4], "token": [3, 4, 5], "token_typ": [3, 4], "tokentyp": [1, 4], "tool": [3, 4], "track": 1, "tree": 1, "true": 1, "truthi": 1, "two": 1, "type": [1, 3, 5], "type_": 1, "typic": 1, "unari": [1, 2, 4, 5], "uncov": 3, "under": 3, "underscor": 1, "understand": 3, "until": 1, "us": [1, 3, 6], "usag": [1, 3], "user": 1, "valu": [1, 2, 3], "var": [0, 1, 2, 3], "var_declar": [1, 4], "variabl": [0, 1, 2, 3], "variableexpr": 1, "varstmt": 1, "virtual": 6, "visit": 1, "visit_assign": [1, 2, 4], "visit_binari": [1, 2, 4, 5], "visit_block": [1, 2, 4], "visit_cal": [1, 2, 4], "visit_express": [1, 2, 4], "visit_funct": [1, 2, 4], "visit_group": [1, 2, 4, 5], "visit_if_stmt": [1, 2, 4], "visit_liter": [1, 2, 4, 5], "visit_log": [1, 2, 4], "visit_print": [1, 2, 4], "visit_unari": [1, 2, 4, 5], "visit_var": [1, 2, 4], "visit_vari": [1, 2, 4], "visit_while_stmt": [1, 2, 4], "visitor": [1, 2], "wa": 1, "want": 3, "welcom": 3, "when": 1, "where": 1, "whether": 1, "which": 1, "while": [0, 1, 3], "while_stat": [1, 4], "while_stmt": [1, 2], "within": 1, "without": [1, 3], "word": 1, "work": 3, "writer": 5, "x": 3, "you": [3, 6], "your": 6, "yourusernam": []}, "titles": ["Code Examples", "flint package", "flint.ast package", "Flint Programming Language", "Flint", "tools package", "Usage"], "titleterms": {"ast": 2, "ast_print": 5, "code": 0, "content": [1, 2, 3, 5], "contribut": 3, "environ": 1, "exampl": 0, "expr": 2, "featur": 3, "flint": [1, 2, 3, 4], "flint_cal": 1, "flint_funct": 1, "generate_ast": 5, "get": [], "instal": 6, "interpret": 1, "kei": 3, "languag": 3, "modul": [1, 2, 5], "packag": [1, 2, 5], "parser": 1, "program": 3, "raise_error": 5, "runtime_error": 1, "scanner": 1, "start": [], "stmt": 2, "submodul": [1, 2, 5], "subpackag": 1, "token": 1, "token_typ": 1, "tool": 5, "usag": 6}})